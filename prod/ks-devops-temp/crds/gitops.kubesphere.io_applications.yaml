
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: applications.gitops.kubesphere.io
spec:
  group: gitops.kubesphere.io
  names:
    kind: Application
    listKind: ApplicationList
    plural: applications
    singular: application
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Application represents an application the DevOps system
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ApplicationSpec is the specification of the Application
            properties:
              argoApp:
                description: ArgoApplication is a definition of Argo Application resource.
                  Those fields simply are copied from the argo-cd project
                properties:
                  operation:
                    description: Operation contains information about a requested
                      or running operation
                    properties:
                      info:
                        description: Info is a list of informational items for this
                          operation
                        items:
                          description: Info represents a name and value
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      initiatedBy:
                        description: InitiatedBy contains information about who initiated
                          the operations
                        properties:
                          automated:
                            description: Automated is set to true if operation was
                              initiated automatically by the application controller.
                            type: boolean
                          username:
                            description: Username contains the name of a user who
                              started operation
                            type: string
                        type: object
                      retry:
                        description: Retry controls the strategy to apply if a sync
                          fails
                        properties:
                          backoff:
                            description: Backoff controls how to backoff on subsequent
                              retries of failed syncs
                            properties:
                              duration:
                                description: Duration is the amount to back off. Default
                                  unit is seconds, but could also be a duration (e.g.
                                  "2m", "1h")
                                type: string
                              factor:
                                description: Factor is a factor to multiply the base
                                  duration after each failed retry
                                format: int64
                                type: integer
                              maxDuration:
                                description: MaxDuration is the maximum amount of
                                  time allowed for the backoff strategy
                                type: string
                            type: object
                          limit:
                            description: Limit is the maximum number of attempts for
                              retrying a failed sync. If set to 0, no retries will
                              be performed.
                            format: int64
                            type: integer
                        type: object
                      sync:
                        description: Sync contains parameters for the operation
                        properties:
                          dryRun:
                            description: DryRun specifies to perform a `kubectl apply
                              --dry-run` without actually performing the sync
                            type: boolean
                          manifests:
                            description: Manifests is an optional field that overrides
                              sync source with a local directory for development
                            items:
                              type: string
                            type: array
                          prune:
                            description: Prune specifies to delete resources from
                              the cluster that are no longer tracked in git
                            type: boolean
                          resources:
                            description: Resources describes which resources shall
                              be part of the sync
                            items:
                              description: SyncOperationResource contains resources
                                to sync.
                              properties:
                                group:
                                  type: string
                                kind:
                                  type: string
                                name:
                                  type: string
                                namespace:
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                            type: array
                          revision:
                            description: Revision is the revision (Git) or chart version
                              (Helm) which to sync the application to If omitted,
                              will use the revision specified in app spec.
                            type: string
                          source:
                            description: Source overrides the source definition set
                              in the application. This is typically set in a Rollback
                              operation and is nil during a Sync operation
                            properties:
                              chart:
                                description: Chart is a Helm chart name, and must
                                  be specified for applications sourced from a Helm
                                  repo.
                                type: string
                              directory:
                                description: Directory holds path/directory specific
                                  options
                                properties:
                                  exclude:
                                    description: Exclude contains a glob pattern to
                                      match paths against that should be explicitly
                                      excluded from being used during manifest generation
                                    type: string
                                  include:
                                    description: Include contains a glob pattern to
                                      match paths against that should be explicitly
                                      included during manifest generation
                                    type: string
                                  jsonnet:
                                    description: Jsonnet holds options specific to
                                      Jsonnet
                                    properties:
                                      extVars:
                                        description: ExtVars is a list of Jsonnet
                                          External Variables
                                        items:
                                          description: JsonnetVar represents a variable
                                            to be passed to jsonnet during manifest
                                            generation
                                          properties:
                                            code:
                                              type: boolean
                                            name:
                                              type: string
                                            value:
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        type: array
                                      libs:
                                        description: Additional library search dirs
                                        items:
                                          type: string
                                        type: array
                                      tlas:
                                        description: TLAS is a list of Jsonnet Top-level
                                          Arguments
                                        items:
                                          description: JsonnetVar represents a variable
                                            to be passed to jsonnet during manifest
                                            generation
                                          properties:
                                            code:
                                              type: boolean
                                            name:
                                              type: string
                                            value:
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        type: array
                                    type: object
                                  recurse:
                                    description: Recurse specifies whether to scan
                                      a directory recursively for manifests
                                    type: boolean
                                type: object
                              helm:
                                description: Helm holds helm specific options
                                properties:
                                  fileParameters:
                                    description: FileParameters are file parameters
                                      to the helm template
                                    items:
                                      description: HelmFileParameter is a file parameter
                                        that's passed to helm template during manifest
                                        generation
                                      properties:
                                        name:
                                          description: Name is the name of the Helm
                                            parameter
                                          type: string
                                        path:
                                          description: Path is the path to the file
                                            containing the values for the Helm parameter
                                          type: string
                                      type: object
                                    type: array
                                  ignoreMissingValueFiles:
                                    description: IgnoreMissingValueFiles prevents
                                      helm template from failing when valueFiles do
                                      not exist locally by not appending them to helm
                                      template --values
                                    type: boolean
                                  parameters:
                                    description: Parameters is a list of Helm parameters
                                      which are passed to the helm template command
                                      upon manifest generation
                                    items:
                                      description: HelmParameter is a parameter that's
                                        passed to helm template during manifest generation
                                      properties:
                                        forceString:
                                          description: ForceString determines whether
                                            to tell Helm to interpret booleans and
                                            numbers as strings
                                          type: boolean
                                        name:
                                          description: Name is the name of the Helm
                                            parameter
                                          type: string
                                        value:
                                          description: Value is the value for the
                                            Helm parameter
                                          type: string
                                      type: object
                                    type: array
                                  passCredentials:
                                    description: PassCredentials pass credentials
                                      to all domains (Helm's --pass-credentials)
                                    type: boolean
                                  releaseName:
                                    description: ReleaseName is the Helm release name
                                      to use. If omitted it will use the application
                                      name
                                    type: string
                                  skipCrds:
                                    description: SkipCrds skips custom resource definition
                                      installation step (Helm's --skip-crds)
                                    type: boolean
                                  valueFiles:
                                    description: ValuesFiles is a list of Helm value
                                      files to use when generating a template
                                    items:
                                      type: string
                                    type: array
                                  values:
                                    description: Values specifies Helm values to be
                                      passed to helm template, typically defined as
                                      a block
                                    type: string
                                  version:
                                    description: Version is the Helm version to use
                                      for templating (either "2" or "3")
                                    type: string
                                type: object
                              ksonnet:
                                description: Ksonnet holds ksonnet specific options
                                properties:
                                  environment:
                                    description: Environment is a ksonnet application
                                      environment name
                                    type: string
                                  parameters:
                                    description: Parameters are a list of ksonnet
                                      component parameter override values
                                    items:
                                      description: KsonnetParameter is a ksonnet component
                                        parameter
                                      properties:
                                        component:
                                          type: string
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                type: object
                              kustomize:
                                description: Kustomize holds kustomize specific options
                                properties:
                                  commonAnnotations:
                                    additionalProperties:
                                      type: string
                                    description: CommonAnnotations is a list of additional
                                      annotations to add to rendered manifests
                                    type: object
                                  commonLabels:
                                    additionalProperties:
                                      type: string
                                    description: CommonLabels is a list of additional
                                      labels to add to rendered manifests
                                    type: object
                                  forceCommonAnnotations:
                                    description: ForceCommonAnnotations specifies
                                      whether to force applying common annotations
                                      to resources for Kustomize apps
                                    type: boolean
                                  forceCommonLabels:
                                    description: ForceCommonLabels specifies whether
                                      to force applying common labels to resources
                                      for Kustomize apps
                                    type: boolean
                                  images:
                                    description: Images is a list of Kustomize image
                                      override specifications
                                    items:
                                      description: KustomizeImage represents a Kustomize
                                        image definition in the format [old_image_name=]<image_name>:<image_tag>
                                      type: string
                                    type: array
                                  namePrefix:
                                    description: NamePrefix is a prefix appended to
                                      resources for Kustomize apps
                                    type: string
                                  nameSuffix:
                                    description: NameSuffix is a suffix appended to
                                      resources for Kustomize apps
                                    type: string
                                  version:
                                    description: Version controls which version of
                                      Kustomize to use for rendering manifests
                                    type: string
                                type: object
                              path:
                                description: Path is a directory path within the Git
                                  repository, and is only valid for applications sourced
                                  from Git.
                                type: string
                              plugin:
                                description: ConfigManagementPlugin holds config management
                                  plugin specific options
                                properties:
                                  env:
                                    description: Env is a list of environment variable
                                      entries
                                    items:
                                      description: EnvEntry represents an entry in
                                        the application's environment
                                      properties:
                                        name:
                                          description: Name is the name of the variable,
                                            usually expressed in uppercase
                                          type: string
                                        value:
                                          description: Value is the value of the variable
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                type: object
                              repoURL:
                                description: RepoURL is the URL to the repository
                                  (Git or Helm) that contains the application manifests
                                type: string
                              targetRevision:
                                description: TargetRevision defines the revision of
                                  the source to sync the application to. In case of
                                  Git, this can be commit, tag, or branch. If omitted,
                                  will equal to HEAD. In case of Helm, this is a semver
                                  tag for the Chart's version.
                                type: string
                            required:
                            - repoURL
                            type: object
                          syncOptions:
                            description: SyncOptions provide per-sync sync-options,
                              e.g. Validate=false
                            items:
                              type: string
                            type: array
                          syncStrategy:
                            description: SyncStrategy describes how to perform the
                              sync
                            properties:
                              apply:
                                description: Apply will perform a `kubectl apply`
                                  to perform the sync.
                                properties:
                                  force:
                                    description: Force indicates whether or not to
                                      supply the --force flag to `kubectl apply`.
                                      The --force flag deletes and re-create the resource,
                                      when PATCH encounters conflict and has retried
                                      for 5 times.
                                    type: boolean
                                type: object
                              hook:
                                description: Hook will submit any referenced resources
                                  to perform the sync. This is the default strategy
                                properties:
                                  force:
                                    description: Force indicates whether or not to
                                      supply the --force flag to `kubectl apply`.
                                      The --force flag deletes and re-create the resource,
                                      when PATCH encounters conflict and has retried
                                      for 5 times.
                                    type: boolean
                                type: object
                            type: object
                        type: object
                    type: object
                  spec:
                    description: ArgoApplicationSpec represents an ArgoCD Application
                    properties:
                      destination:
                        description: Destination is a reference to the target Kubernetes
                          server and namespace
                        properties:
                          name:
                            description: Name is an alternate way of specifying the
                              target cluster by its symbolic name
                            type: string
                          namespace:
                            description: Namespace specifies the target namespace
                              for the application's resources. The namespace will
                              only be set for namespace-scoped resources that have
                              not set a value for .metadata.namespace
                            type: string
                          server:
                            description: Server specifies the URL of the target cluster
                              and must be set to the Kubernetes control plane API
                            type: string
                        type: object
                      ignoreDifferences:
                        description: IgnoreDifferences is a list of resources and
                          their fields which should be ignored during comparison
                        items:
                          description: ResourceIgnoreDifferences contains resource
                            filter and list of json paths which should be ignored
                            during comparison with live state.
                          properties:
                            group:
                              type: string
                            jqPathExpressions:
                              items:
                                type: string
                              type: array
                            jsonPointers:
                              items:
                                type: string
                              type: array
                            kind:
                              type: string
                            managedFieldsManagers:
                              description: ManagedFieldsManagers is a list of trusted
                                managers. Fields mutated by those managers will take
                                precedence over the desired state defined in the SCM
                                and won't be displayed in diffs
                              items:
                                type: string
                              type: array
                            name:
                              type: string
                            namespace:
                              type: string
                          required:
                          - kind
                          type: object
                        type: array
                      info:
                        description: Info contains a list of information (URLs, email
                          addresses, and plain text) that relates to the application
                        items:
                          description: Info represents a name and value
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      project:
                        description: Project is a reference to the project this application
                          belongs to. The empty string means that application belongs
                          to the 'default' project.
                        type: string
                      revisionHistoryLimit:
                        description: RevisionHistoryLimit limits the number of items
                          kept in the application's revision history, which is used
                          for informational purposes as well as for rollbacks to previous
                          versions. This should only be changed in exceptional circumstances.
                          Setting to zero will store no history. This will reduce
                          storage used. Increasing will increase the space used to
                          store the history, so we do not recommend increasing it.
                          Default is 10.
                        format: int64
                        type: integer
                      source:
                        description: Source is a reference to the location of the
                          application's manifests or chart
                        properties:
                          chart:
                            description: Chart is a Helm chart name, and must be specified
                              for applications sourced from a Helm repo.
                            type: string
                          directory:
                            description: Directory holds path/directory specific options
                            properties:
                              exclude:
                                description: Exclude contains a glob pattern to match
                                  paths against that should be explicitly excluded
                                  from being used during manifest generation
                                type: string
                              include:
                                description: Include contains a glob pattern to match
                                  paths against that should be explicitly included
                                  during manifest generation
                                type: string
                              jsonnet:
                                description: Jsonnet holds options specific to Jsonnet
                                properties:
                                  extVars:
                                    description: ExtVars is a list of Jsonnet External
                                      Variables
                                    items:
                                      description: JsonnetVar represents a variable
                                        to be passed to jsonnet during manifest generation
                                      properties:
                                        code:
                                          type: boolean
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  libs:
                                    description: Additional library search dirs
                                    items:
                                      type: string
                                    type: array
                                  tlas:
                                    description: TLAS is a list of Jsonnet Top-level
                                      Arguments
                                    items:
                                      description: JsonnetVar represents a variable
                                        to be passed to jsonnet during manifest generation
                                      properties:
                                        code:
                                          type: boolean
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                type: object
                              recurse:
                                description: Recurse specifies whether to scan a directory
                                  recursively for manifests
                                type: boolean
                            type: object
                          helm:
                            description: Helm holds helm specific options
                            properties:
                              fileParameters:
                                description: FileParameters are file parameters to
                                  the helm template
                                items:
                                  description: HelmFileParameter is a file parameter
                                    that's passed to helm template during manifest
                                    generation
                                  properties:
                                    name:
                                      description: Name is the name of the Helm parameter
                                      type: string
                                    path:
                                      description: Path is the path to the file containing
                                        the values for the Helm parameter
                                      type: string
                                  type: object
                                type: array
                              ignoreMissingValueFiles:
                                description: IgnoreMissingValueFiles prevents helm
                                  template from failing when valueFiles do not exist
                                  locally by not appending them to helm template --values
                                type: boolean
                              parameters:
                                description: Parameters is a list of Helm parameters
                                  which are passed to the helm template command upon
                                  manifest generation
                                items:
                                  description: HelmParameter is a parameter that's
                                    passed to helm template during manifest generation
                                  properties:
                                    forceString:
                                      description: ForceString determines whether
                                        to tell Helm to interpret booleans and numbers
                                        as strings
                                      type: boolean
                                    name:
                                      description: Name is the name of the Helm parameter
                                      type: string
                                    value:
                                      description: Value is the value for the Helm
                                        parameter
                                      type: string
                                  type: object
                                type: array
                              passCredentials:
                                description: PassCredentials pass credentials to all
                                  domains (Helm's --pass-credentials)
                                type: boolean
                              releaseName:
                                description: ReleaseName is the Helm release name
                                  to use. If omitted it will use the application name
                                type: string
                              skipCrds:
                                description: SkipCrds skips custom resource definition
                                  installation step (Helm's --skip-crds)
                                type: boolean
                              valueFiles:
                                description: ValuesFiles is a list of Helm value files
                                  to use when generating a template
                                items:
                                  type: string
                                type: array
                              values:
                                description: Values specifies Helm values to be passed
                                  to helm template, typically defined as a block
                                type: string
                              version:
                                description: Version is the Helm version to use for
                                  templating (either "2" or "3")
                                type: string
                            type: object
                          ksonnet:
                            description: Ksonnet holds ksonnet specific options
                            properties:
                              environment:
                                description: Environment is a ksonnet application
                                  environment name
                                type: string
                              parameters:
                                description: Parameters are a list of ksonnet component
                                  parameter override values
                                items:
                                  description: KsonnetParameter is a ksonnet component
                                    parameter
                                  properties:
                                    component:
                                      type: string
                                    name:
                                      type: string
                                    value:
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                            type: object
                          kustomize:
                            description: Kustomize holds kustomize specific options
                            properties:
                              commonAnnotations:
                                additionalProperties:
                                  type: string
                                description: CommonAnnotations is a list of additional
                                  annotations to add to rendered manifests
                                type: object
                              commonLabels:
                                additionalProperties:
                                  type: string
                                description: CommonLabels is a list of additional
                                  labels to add to rendered manifests
                                type: object
                              forceCommonAnnotations:
                                description: ForceCommonAnnotations specifies whether
                                  to force applying common annotations to resources
                                  for Kustomize apps
                                type: boolean
                              forceCommonLabels:
                                description: ForceCommonLabels specifies whether to
                                  force applying common labels to resources for Kustomize
                                  apps
                                type: boolean
                              images:
                                description: Images is a list of Kustomize image override
                                  specifications
                                items:
                                  description: KustomizeImage represents a Kustomize
                                    image definition in the format [old_image_name=]<image_name>:<image_tag>
                                  type: string
                                type: array
                              namePrefix:
                                description: NamePrefix is a prefix appended to resources
                                  for Kustomize apps
                                type: string
                              nameSuffix:
                                description: NameSuffix is a suffix appended to resources
                                  for Kustomize apps
                                type: string
                              version:
                                description: Version controls which version of Kustomize
                                  to use for rendering manifests
                                type: string
                            type: object
                          path:
                            description: Path is a directory path within the Git repository,
                              and is only valid for applications sourced from Git.
                            type: string
                          plugin:
                            description: ConfigManagementPlugin holds config management
                              plugin specific options
                            properties:
                              env:
                                description: Env is a list of environment variable
                                  entries
                                items:
                                  description: EnvEntry represents an entry in the
                                    application's environment
                                  properties:
                                    name:
                                      description: Name is the name of the variable,
                                        usually expressed in uppercase
                                      type: string
                                    value:
                                      description: Value is the value of the variable
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              name:
                                type: string
                            type: object
                          repoURL:
                            description: RepoURL is the URL to the repository (Git
                              or Helm) that contains the application manifests
                            type: string
                          targetRevision:
                            description: TargetRevision defines the revision of the
                              source to sync the application to. In case of Git, this
                              can be commit, tag, or branch. If omitted, will equal
                              to HEAD. In case of Helm, this is a semver tag for the
                              Chart's version.
                            type: string
                        required:
                        - repoURL
                        type: object
                      syncPolicy:
                        description: SyncPolicy controls when and how a sync will
                          be performed
                        properties:
                          automated:
                            description: Automated will keep an application synced
                              to the target revision
                            properties:
                              allowEmpty:
                                description: 'AllowEmpty allows apps have zero live
                                  resources (default: false)'
                                type: boolean
                              prune:
                                description: 'Prune specifies whether to delete resources
                                  from the cluster that are not found in the sources
                                  anymore as part of automated sync (default: false)'
                                type: boolean
                              selfHeal:
                                description: 'SelfHeal specifes whether to revert
                                  resources back to their desired state upon modification
                                  in the cluster (default: false)'
                                type: boolean
                            type: object
                          retry:
                            description: Retry controls failed sync retry behavior
                            properties:
                              backoff:
                                description: Backoff controls how to backoff on subsequent
                                  retries of failed syncs
                                properties:
                                  duration:
                                    description: Duration is the amount to back off.
                                      Default unit is seconds, but could also be a
                                      duration (e.g. "2m", "1h")
                                    type: string
                                  factor:
                                    description: Factor is a factor to multiply the
                                      base duration after each failed retry
                                    format: int64
                                    type: integer
                                  maxDuration:
                                    description: MaxDuration is the maximum amount
                                      of time allowed for the backoff strategy
                                    type: string
                                type: object
                              limit:
                                description: Limit is the maximum number of attempts
                                  for retrying a failed sync. If set to 0, no retries
                                  will be performed.
                                format: int64
                                type: integer
                            type: object
                          syncOptions:
                            description: Options allow you to specify whole app sync-options
                            items:
                              type: string
                            type: array
                        type: object
                    required:
                    - destination
                    - project
                    - source
                    type: object
                type: object
              fluxApp:
                description: FluxApplication is an abstraction of FluxCD HelmRelease
                  and FluxCD Kustomization
                properties:
                  spec:
                    description: FluxApplicationSpec contains three important elements
                      that a GitOps Application needs. 1. Source (the ground truth)
                      2. Application Config 3. Destinations (where the Application
                      should be deployed) Destinations are in the Config field cause
                      the FluxApplication is designed to be a Multi-Clusters Application
                      that each Destination has its own Config https://github.com/kubesphere/ks-devops/issues/767
                    properties:
                      config:
                        description: Config represents the Config of the FluxCD Application
                        properties:
                          helmRelease:
                            description: HelmRelease for FluxCD HelmRelease
                            properties:
                              chart:
                                description: Chart defines the template of the v1beta2.HelmChart
                                  that should be created for this HelmRelease.
                                properties:
                                  chart:
                                    description: The name or path the Helm chart is
                                      available at in the SourceRef.
                                    type: string
                                  interval:
                                    description: Interval at which to check the v1beta2.Source
                                      for updates. Defaults to 'HelmReleaseSpec.Interval'.
                                    type: string
                                  reconcileStrategy:
                                    description: Determines what enables the creation
                                      of a new artifact. Valid values are ('ChartVersion',
                                      'Revision'). See the documentation of the values
                                      for an explanation on their behavior. Defaults
                                      to ChartVersion when omitted.
                                    type: string
                                  valuesFiles:
                                    description: Alternative list of values files
                                      to use as the chart values (values.yaml is not
                                      included by default), expected to be a relative
                                      path in the SourceRef. Values files are merged
                                      in the order of this list with the last file
                                      overriding the first. Ignored when omitted.
                                    items:
                                      type: string
                                    type: array
                                  version:
                                    default: '*'
                                    description: Version semver expression, ignored
                                      for charts from v1beta2.GitRepository and v1beta2.Bucket
                                      sources. Defaults to latest when omitted.
                                    type: string
                                required:
                                - chart
                                type: object
                              deploy:
                                description: HelmReleaseConfig stand for multi-clusters
                                  and multi-targetNamespace config
                                items:
                                  properties:
                                    dependsOn:
                                      description: DependsOn may contain a meta.NamespacedObjectReference
                                        slice with references to HelmRelease resources
                                        that must be ready before this HelmRelease
                                        can be reconciled.
                                      items:
                                        description: NamespacedObjectReference contains
                                          enough information to locate the referenced
                                          Kubernetes resource object in any namespace.
                                        properties:
                                          name:
                                            description: Name of the referent.
                                            type: string
                                          namespace:
                                            description: Namespace of the referent,
                                              when not specified it acts as LocalObjectReference.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      type: array
                                    destination:
                                      description: Destination stand for the destination
                                        of the helmrelease
                                      properties:
                                        kubeConfig:
                                          description: KubeConfig references a Kubernetes
                                            secret that contains a kubeconfig file.
                                          properties:
                                            secretRef:
                                              description: SecretRef holds the name
                                                to a secret that contains a key with
                                                the kubeconfig file as the value.
                                                If no key is specified the key will
                                                default to 'value'. The secret must
                                                be in the same namespace as the HelmRelease.
                                                It is recommended that the kubeconfig
                                                is self-contained, and the secret
                                                is regularly updated if credentials
                                                such as a cloud-access-token expire.
                                                Cloud specific `cmd-path` auth helpers
                                                will not function without adding binaries
                                                and credentials to the Pod that is
                                                responsible for reconciling the HelmRelease.
                                              properties:
                                                key:
                                                  description: Key in the Secret,
                                                    when not specified an implementation-specific
                                                    default key is used.
                                                  type: string
                                                name:
                                                  description: Name of the Secret.
                                                  type: string
                                              required:
                                              - name
                                              type: object
                                          type: object
                                        targetNamespace:
                                          description: TargetNamespace to target when
                                            performing operations for the HelmRelease.
                                            Defaults to the namespace of the HelmRelease.
                                          type: string
                                      type: object
                                    install:
                                      description: Install holds the configuration
                                        for Helm install actions for this HelmRelease.
                                      properties:
                                        crds:
                                          description: "CRDs upgrade CRDs from the
                                            Helm Chart's crds directory according
                                            to the CRD upgrade policy provided here.
                                            Valid values are `Skip`, `Create` or `CreateReplace`.
                                            Default is `Create` and if omitted CRDs
                                            are installed but not updated. \n Skip:
                                            do neither install nor replace (update)
                                            any CRDs. \n Create: new CRDs are created,
                                            existing CRDs are neither updated nor
                                            deleted. \n CreateReplace: new CRDs are
                                            created, existing CRDs are updated (replaced)
                                            but not deleted. \n By default, CRDs are
                                            applied (installed) during Helm install
                                            action. With this option users can opt-in
                                            to CRD replace existing CRDs on Helm install
                                            actions, which is not (yet) natively supported
                                            by Helm. https://helm.sh/docs/chart_best_practices/custom_resource_definitions."
                                          enum:
                                          - Skip
                                          - Create
                                          - CreateReplace
                                          type: string
                                        createNamespace:
                                          description: CreateNamespace tells the Helm
                                            install action to create the HelmReleaseSpec.TargetNamespace
                                            if it does not exist yet. On uninstall,
                                            the namespace will not be garbage collected.
                                          type: boolean
                                        disableHooks:
                                          description: DisableHooks prevents hooks
                                            from running during the Helm install action.
                                          type: boolean
                                        disableOpenAPIValidation:
                                          description: DisableOpenAPIValidation prevents
                                            the Helm install action from validating
                                            rendered templates against the Kubernetes
                                            OpenAPI Schema.
                                          type: boolean
                                        disableWait:
                                          description: DisableWait disables the waiting
                                            for resources to be ready after a Helm
                                            install has been performed.
                                          type: boolean
                                        disableWaitForJobs:
                                          description: DisableWaitForJobs disables
                                            waiting for jobs to complete after a Helm
                                            install has been performed.
                                          type: boolean
                                        remediation:
                                          description: Remediation holds the remediation
                                            configuration for when the Helm install
                                            action for the HelmRelease fails. The
                                            default is to not perform any action.
                                          properties:
                                            ignoreTestFailures:
                                              description: IgnoreTestFailures tells
                                                the controller to skip remediation
                                                when the Helm tests are run after
                                                an install action but fail. Defaults
                                                to 'Test.IgnoreFailures'.
                                              type: boolean
                                            remediateLastFailure:
                                              description: RemediateLastFailure tells
                                                the controller to remediate the last
                                                failure, when no retries remain. Defaults
                                                to 'false'.
                                              type: boolean
                                            retries:
                                              description: Retries is the number of
                                                retries that should be attempted on
                                                failures before bailing. Remediation,
                                                using an uninstall, is performed between
                                                each attempt. Defaults to '0', a negative
                                                integer equals to unlimited retries.
                                              type: integer
                                          type: object
                                        replace:
                                          description: Replace tells the Helm install
                                            action to re-use the 'ReleaseName', but
                                            only if that name is a deleted release
                                            which remains in the history.
                                          type: boolean
                                        skipCRDs:
                                          description: "SkipCRDs tells the Helm install
                                            action to not install any CRDs. By default,
                                            CRDs are installed if not already present.
                                            \n Deprecated use CRD policy (`crds`)
                                            attribute with value `Skip` instead."
                                          type: boolean
                                        timeout:
                                          description: Timeout is the time to wait
                                            for any individual Kubernetes operation
                                            (like Jobs for hooks) during the performance
                                            of a Helm install action. Defaults to
                                            'HelmReleaseSpec.Timeout'.
                                          type: string
                                      type: object
                                    interval:
                                      description: The interval at which to reconcile
                                        the Kustomization.
                                      type: string
                                    maxHistory:
                                      description: MaxHistory is the number of revisions
                                        saved by Helm for this HelmRelease. Use '0'
                                        for an unlimited number of revisions; defaults
                                        to '10'.
                                      type: integer
                                    postRenderers:
                                      description: PostRenderers holds an array of
                                        Helm PostRenderers, which will be applied
                                        in order of their definition.
                                      items:
                                        description: PostRenderer contains a Helm
                                          PostRenderer specification.
                                        properties:
                                          kustomize:
                                            description: Kustomization to apply as
                                              PostRenderer.
                                            properties:
                                              images:
                                                description: Images is a list of (image
                                                  name, new name, new tag or digest)
                                                  for changing image names, tags or
                                                  digests. This can also be achieved
                                                  with a patch, but this operator
                                                  is simpler to specify.
                                                items:
                                                  description: Image contains an image
                                                    name, a new name, a new tag or
                                                    digest, which will replace the
                                                    original name and tag.
                                                  properties:
                                                    digest:
                                                      description: Digest is the value
                                                        used to replace the original
                                                        image tag. If digest is present
                                                        NewTag value is ignored.
                                                      type: string
                                                    name:
                                                      description: Name is a tag-less
                                                        image name.
                                                      type: string
                                                    newName:
                                                      description: NewName is the
                                                        value used to replace the
                                                        original name.
                                                      type: string
                                                    newTag:
                                                      description: NewTag is the value
                                                        used to replace the original
                                                        tag.
                                                      type: string
                                                  required:
                                                  - name
                                                  type: object
                                                type: array
                                              patches:
                                                description: Strategic merge and JSON
                                                  patches, defined as inline YAML
                                                  objects, capable of targeting objects
                                                  based on kind, label and annotation
                                                  selectors.
                                                items:
                                                  description: Patch contains an inline
                                                    StrategicMerge or JSON6902 patch,
                                                    and the target the patch should
                                                    be applied to.
                                                  properties:
                                                    patch:
                                                      description: Patch contains
                                                        an inline StrategicMerge patch
                                                        or an inline JSON6902 patch
                                                        with an array of operation
                                                        objects.
                                                      type: string
                                                    target:
                                                      description: Target points to
                                                        the resources that the patch
                                                        document should be applied
                                                        to.
                                                      properties:
                                                        annotationSelector:
                                                          description: AnnotationSelector
                                                            is a string that follows
                                                            the label selection expression
                                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                                            It matches with the resource
                                                            annotations.
                                                          type: string
                                                        group:
                                                          description: Group is the
                                                            API group to select resources
                                                            from. Together with Version
                                                            and Kind it is capable
                                                            of unambiguously identifying
                                                            and/or selecting resources.
                                                            https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                                          type: string
                                                        kind:
                                                          description: Kind of the
                                                            API Group to select resources
                                                            from. Together with Group
                                                            and Version it is capable
                                                            of unambiguously identifying
                                                            and/or selecting resources.
                                                            https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                                          type: string
                                                        labelSelector:
                                                          description: LabelSelector
                                                            is a string that follows
                                                            the label selection expression
                                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                                            It matches with the resource
                                                            labels.
                                                          type: string
                                                        name:
                                                          description: Name to match
                                                            resources with.
                                                          type: string
                                                        namespace:
                                                          description: Namespace to
                                                            select resources from.
                                                          type: string
                                                        version:
                                                          description: Version of
                                                            the API Group to select
                                                            resources from. Together
                                                            with Group and Kind it
                                                            is capable of unambiguously
                                                            identifying and/or selecting
                                                            resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                                          type: string
                                                      type: object
                                                  type: object
                                                type: array
                                              patchesJson6902:
                                                description: JSON 6902 patches, defined
                                                  as inline YAML objects.
                                                items:
                                                  description: JSON6902Patch contains
                                                    a JSON6902 patch and the target
                                                    the patch should be applied to.
                                                  properties:
                                                    patch:
                                                      description: Patch contains
                                                        the JSON6902 patch document
                                                        with an array of operation
                                                        objects.
                                                      items:
                                                        description: JSON6902 is a
                                                          JSON6902 operation object.
                                                          https://datatracker.ietf.org/doc/html/rfc6902#section-4
                                                        properties:
                                                          from:
                                                            description: From contains
                                                              a JSON-pointer value
                                                              that references a location
                                                              within the target document
                                                              where the operation
                                                              is performed. The meaning
                                                              of the value depends
                                                              on the value of Op,
                                                              and is NOT taken into
                                                              account by all operations.
                                                            type: string
                                                          op:
                                                            description: Op indicates
                                                              the operation to perform.
                                                              Its value MUST be one
                                                              of "add", "remove",
                                                              "replace", "move", "copy",
                                                              or "test". https://datatracker.ietf.org/doc/html/rfc6902#section-4
                                                            enum:
                                                            - test
                                                            - remove
                                                            - add
                                                            - replace
                                                            - move
                                                            - copy
                                                            type: string
                                                          path:
                                                            description: Path contains
                                                              the JSON-pointer value
                                                              that references a location
                                                              within the target document
                                                              where the operation
                                                              is performed. The meaning
                                                              of the value depends
                                                              on the value of Op.
                                                            type: string
                                                          value:
                                                            description: Value contains
                                                              a valid JSON structure.
                                                              The meaning of the value
                                                              depends on the value
                                                              of Op, and is NOT taken
                                                              into account by all
                                                              operations.
                                                            x-kubernetes-preserve-unknown-fields: true
                                                        required:
                                                        - op
                                                        - path
                                                        type: object
                                                      type: array
                                                    target:
                                                      description: Target points to
                                                        the resources that the patch
                                                        document should be applied
                                                        to.
                                                      properties:
                                                        annotationSelector:
                                                          description: AnnotationSelector
                                                            is a string that follows
                                                            the label selection expression
                                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                                            It matches with the resource
                                                            annotations.
                                                          type: string
                                                        group:
                                                          description: Group is the
                                                            API group to select resources
                                                            from. Together with Version
                                                            and Kind it is capable
                                                            of unambiguously identifying
                                                            and/or selecting resources.
                                                            https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                                          type: string
                                                        kind:
                                                          description: Kind of the
                                                            API Group to select resources
                                                            from. Together with Group
                                                            and Version it is capable
                                                            of unambiguously identifying
                                                            and/or selecting resources.
                                                            https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                                          type: string
                                                        labelSelector:
                                                          description: LabelSelector
                                                            is a string that follows
                                                            the label selection expression
                                                            https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                                            It matches with the resource
                                                            labels.
                                                          type: string
                                                        name:
                                                          description: Name to match
                                                            resources with.
                                                          type: string
                                                        namespace:
                                                          description: Namespace to
                                                            select resources from.
                                                          type: string
                                                        version:
                                                          description: Version of
                                                            the API Group to select
                                                            resources from. Together
                                                            with Group and Kind it
                                                            is capable of unambiguously
                                                            identifying and/or selecting
                                                            resources. https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                                          type: string
                                                      type: object
                                                  required:
                                                  - patch
                                                  - target
                                                  type: object
                                                type: array
                                              patchesStrategicMerge:
                                                description: Strategic merge patches,
                                                  defined as inline YAML objects.
                                                items:
                                                  x-kubernetes-preserve-unknown-fields: true
                                                type: array
                                            type: object
                                        type: object
                                      type: array
                                    releaseName:
                                      description: ReleaseName used for the Helm release.
                                        Defaults to a composition of '[TargetNamespace-]Name'.
                                      type: string
                                    rollback:
                                      description: Rollback holds the configuration
                                        for Helm rollback actions for this HelmRelease.
                                      properties:
                                        cleanupOnFail:
                                          description: CleanupOnFail allows deletion
                                            of new resources created during the Helm
                                            rollback action when it fails.
                                          type: boolean
                                        disableHooks:
                                          description: DisableHooks prevents hooks
                                            from running during the Helm rollback
                                            action.
                                          type: boolean
                                        disableWait:
                                          description: DisableWait disables the waiting
                                            for resources to be ready after a Helm
                                            rollback has been performed.
                                          type: boolean
                                        disableWaitForJobs:
                                          description: DisableWaitForJobs disables
                                            waiting for jobs to complete after a Helm
                                            rollback has been performed.
                                          type: boolean
                                        force:
                                          description: Force forces resource updates
                                            through a replacement strategy.
                                          type: boolean
                                        recreate:
                                          description: Recreate performs pod restarts
                                            for the resource if applicable.
                                          type: boolean
                                        timeout:
                                          description: Timeout is the time to wait
                                            for any individual Kubernetes operation
                                            (like Jobs for hooks) during the performance
                                            of a Helm rollback action. Defaults to
                                            'HelmReleaseSpec.Timeout'.
                                          type: string
                                      type: object
                                    serviceAccountName:
                                      description: The name of the Kubernetes service
                                        account to impersonate when reconciling this
                                        HelmRelease.
                                      type: string
                                    storageNamespace:
                                      description: StorageNamespace used for the Helm
                                        storage. Defaults to the namespace of the
                                        HelmRelease.
                                      type: string
                                    suspend:
                                      description: Suspend tells the controller to
                                        suspend reconciliation for this HelmRelease,
                                        it does not apply to already started reconciliations.
                                        Defaults to false.
                                      type: boolean
                                    test:
                                      description: Test holds the configuration for
                                        Helm test actions for this HelmRelease.
                                      properties:
                                        enable:
                                          description: Enable enables Helm test actions
                                            for this HelmRelease after an Helm install
                                            or upgrade action has been performed.
                                          type: boolean
                                        ignoreFailures:
                                          description: IgnoreFailures tells the controller
                                            to skip remediation when the Helm tests
                                            are run but fail. Can be overwritten for
                                            tests run after install or upgrade actions
                                            in 'Install.IgnoreTestFailures' and 'Upgrade.IgnoreTestFailures'.
                                          type: boolean
                                        timeout:
                                          description: Timeout is the time to wait
                                            for any individual Kubernetes operation
                                            during the performance of a Helm test
                                            action. Defaults to 'HelmReleaseSpec.Timeout'.
                                          type: string
                                      type: object
                                    timeout:
                                      description: Timeout is the time to wait for
                                        any individual Kubernetes operation (like
                                        Jobs for hooks) during the performance of
                                        a Helm action. Defaults to '5m0s'.
                                      type: string
                                    uninstall:
                                      description: Uninstall holds the configuration
                                        for Helm uninstall actions for this HelmRelease.
                                      properties:
                                        disableHooks:
                                          description: DisableHooks prevents hooks
                                            from running during the Helm rollback
                                            action.
                                          type: boolean
                                        disableWait:
                                          description: DisableWait disables waiting
                                            for all the resources to be deleted after
                                            a Helm uninstall is performed.
                                          type: boolean
                                        keepHistory:
                                          description: KeepHistory tells Helm to remove
                                            all associated resources and mark the
                                            release as deleted, but retain the release
                                            history.
                                          type: boolean
                                        timeout:
                                          description: Timeout is the time to wait
                                            for any individual Kubernetes operation
                                            (like Jobs for hooks) during the performance
                                            of a Helm uninstall action. Defaults to
                                            'HelmReleaseSpec.Timeout'.
                                          type: string
                                      type: object
                                    upgrade:
                                      description: Upgrade holds the configuration
                                        for Helm upgrade actions for this HelmRelease.
                                      properties:
                                        cleanupOnFail:
                                          description: CleanupOnFail allows deletion
                                            of new resources created during the Helm
                                            upgrade action when it fails.
                                          type: boolean
                                        crds:
                                          description: "CRDs upgrade CRDs from the
                                            Helm Chart's crds directory according
                                            to the CRD upgrade policy provided here.
                                            Valid values are `Skip`, `Create` or `CreateReplace`.
                                            Default is `Skip` and if omitted CRDs
                                            are neither installed nor upgraded. \n
                                            Skip: do neither install nor replace (update)
                                            any CRDs. \n Create: new CRDs are created,
                                            existing CRDs are neither updated nor
                                            deleted. \n CreateReplace: new CRDs are
                                            created, existing CRDs are updated (replaced)
                                            but not deleted. \n By default, CRDs are
                                            not applied during Helm upgrade action.
                                            With this option users can opt-in to CRD
                                            upgrade, which is not (yet) natively supported
                                            by Helm. https://helm.sh/docs/chart_best_practices/custom_resource_definitions."
                                          enum:
                                          - Skip
                                          - Create
                                          - CreateReplace
                                          type: string
                                        disableHooks:
                                          description: DisableHooks prevents hooks
                                            from running during the Helm upgrade action.
                                          type: boolean
                                        disableOpenAPIValidation:
                                          description: DisableOpenAPIValidation prevents
                                            the Helm upgrade action from validating
                                            rendered templates against the Kubernetes
                                            OpenAPI Schema.
                                          type: boolean
                                        disableWait:
                                          description: DisableWait disables the waiting
                                            for resources to be ready after a Helm
                                            upgrade has been performed.
                                          type: boolean
                                        disableWaitForJobs:
                                          description: DisableWaitForJobs disables
                                            waiting for jobs to complete after a Helm
                                            upgrade has been performed.
                                          type: boolean
                                        force:
                                          description: Force forces resource updates
                                            through a replacement strategy.
                                          type: boolean
                                        preserveValues:
                                          description: PreserveValues will make Helm
                                            reuse the last release's values and merge
                                            in overrides from 'Values'. Setting this
                                            flag makes the HelmRelease non-declarative.
                                          type: boolean
                                        remediation:
                                          description: Remediation holds the remediation
                                            configuration for when the Helm upgrade
                                            action for the HelmRelease fails. The
                                            default is to not perform any action.
                                          properties:
                                            ignoreTestFailures:
                                              description: IgnoreTestFailures tells
                                                the controller to skip remediation
                                                when the Helm tests are run after
                                                an upgrade action but fail. Defaults
                                                to 'Test.IgnoreFailures'.
                                              type: boolean
                                            remediateLastFailure:
                                              description: RemediateLastFailure tells
                                                the controller to remediate the last
                                                failure, when no retries remain. Defaults
                                                to 'false' unless 'Retries' is greater
                                                than 0.
                                              type: boolean
                                            retries:
                                              description: Retries is the number of
                                                retries that should be attempted on
                                                failures before bailing. Remediation,
                                                using 'Strategy', is performed between
                                                each attempt. Defaults to '0', a negative
                                                integer equals to unlimited retries.
                                              type: integer
                                            strategy:
                                              description: Strategy to use for failure
                                                remediation. Defaults to 'rollback'.
                                              enum:
                                              - rollback
                                              - uninstall
                                              type: string
                                          type: object
                                        timeout:
                                          description: Timeout is the time to wait
                                            for any individual Kubernetes operation
                                            (like Jobs for hooks) during the performance
                                            of a Helm upgrade action. Defaults to
                                            'HelmReleaseSpec.Timeout'.
                                          type: string
                                      type: object
                                    values:
                                      description: Values holds the values for this
                                        Helm release.
                                      x-kubernetes-preserve-unknown-fields: true
                                    valuesFrom:
                                      description: ValuesFrom holds references to
                                        resources containing Helm values for this
                                        HelmRelease, and information about how they
                                        should be merged.
                                      items:
                                        description: ValuesReference contains a reference
                                          to a resource containing Helm values, and
                                          optionally the key they can be found at.
                                        properties:
                                          kind:
                                            description: Kind of the values referent,
                                              valid values are ('Secret', 'ConfigMap').
                                            enum:
                                            - Secret
                                            - ConfigMap
                                            type: string
                                          name:
                                            description: Name of the values referent.
                                              Should reside in the same namespace
                                              as the referring resource.
                                            maxLength: 253
                                            minLength: 1
                                            type: string
                                          optional:
                                            description: Optional marks this ValuesReference
                                              as optional. When set, a not found error
                                              for the values reference is ignored,
                                              but any ValuesKey, TargetPath or transient
                                              error will still result in a reconciliation
                                              failure.
                                            type: boolean
                                          targetPath:
                                            description: TargetPath is the YAML dot
                                              notation path the value should be merged
                                              at. When set, the ValuesKey is expected
                                              to be a single flat value. Defaults
                                              to 'None', which results in the values
                                              getting merged at the root.
                                            type: string
                                          valuesKey:
                                            description: ValuesKey is the data key
                                              where the values.yaml or a specific
                                              value can be found at. Defaults to 'values.yaml'.
                                            type: string
                                        required:
                                        - kind
                                        - name
                                        type: object
                                      type: array
                                  required:
                                  - destination
                                  - interval
                                  type: object
                                type: array
                              template:
                                description: Template ref a HelmTemplate that has
                                  been saved before
                                type: string
                            required:
                            - deploy
                            type: object
                          kustomization:
                            description: Kustomization for FluxCD Kustomization
                            items:
                              description: KustomizationSpec defines the configuration
                                to calculate the desired state from a Source using
                                Kustomize.
                              properties:
                                decryption:
                                  description: Decrypt Kubernetes secrets before applying
                                    them on the cluster.
                                  properties:
                                    provider:
                                      description: Provider is the name of the decryption
                                        engine.
                                      enum:
                                      - sops
                                      type: string
                                    secretRef:
                                      description: The secret name containing the
                                        private OpenPGP keys used for decryption.
                                      properties:
                                        name:
                                          description: Name of the referent.
                                          type: string
                                      required:
                                      - name
                                      type: object
                                  required:
                                  - provider
                                  type: object
                                dependsOn:
                                  description: DependsOn may contain a meta.NamespacedObjectReference
                                    slice with references to Kustomization resources
                                    that must be ready before this Kustomization can
                                    be reconciled.
                                  items:
                                    description: NamespacedObjectReference contains
                                      enough information to locate the referenced
                                      Kubernetes resource object in any namespace.
                                    properties:
                                      name:
                                        description: Name of the referent.
                                        type: string
                                      namespace:
                                        description: Namespace of the referent, when
                                          not specified it acts as LocalObjectReference.
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  type: array
                                destination:
                                  description: Destination stand for the destination
                                    of the kustomization
                                  properties:
                                    kubeConfig:
                                      description: KubeConfig references a Kubernetes
                                        secret that contains a kubeconfig file.
                                      properties:
                                        secretRef:
                                          description: SecretRef holds the name to
                                            a secret that contains a key with the
                                            kubeconfig file as the value. If no key
                                            is specified the key will default to 'value'.
                                            The secret must be in the same namespace
                                            as the HelmRelease. It is recommended
                                            that the kubeconfig is self-contained,
                                            and the secret is regularly updated if
                                            credentials such as a cloud-access-token
                                            expire. Cloud specific `cmd-path` auth
                                            helpers will not function without adding
                                            binaries and credentials to the Pod that
                                            is responsible for reconciling the HelmRelease.
                                          properties:
                                            key:
                                              description: Key in the Secret, when
                                                not specified an implementation-specific
                                                default key is used.
                                              type: string
                                            name:
                                              description: Name of the Secret.
                                              type: string
                                          required:
                                          - name
                                          type: object
                                      type: object
                                    targetNamespace:
                                      description: TargetNamespace to target when
                                        performing operations for the HelmRelease.
                                        Defaults to the namespace of the HelmRelease.
                                      type: string
                                  type: object
                                force:
                                  description: Force instructs the controller to recreate
                                    resources when patching fails due to an immutable
                                    field change.
                                  type: boolean
                                healthChecks:
                                  description: A list of resources to be included
                                    in the health assessment.
                                  items:
                                    description: NamespacedObjectKindReference contains
                                      enough information to locate the typed referenced
                                      Kubernetes resource object in any namespace.
                                    properties:
                                      apiVersion:
                                        description: API version of the referent,
                                          if not specified the Kubernetes preferred
                                          version will be used.
                                        type: string
                                      kind:
                                        description: Kind of the referent.
                                        type: string
                                      name:
                                        description: Name of the referent.
                                        type: string
                                      namespace:
                                        description: Namespace of the referent, when
                                          not specified it acts as LocalObjectReference.
                                        type: string
                                    required:
                                    - kind
                                    - name
                                    type: object
                                  type: array
                                images:
                                  description: Images is a list of (image name, new
                                    name, new tag or digest) for changing image names,
                                    tags or digests. This can also be achieved with
                                    a patch, but this operator is simpler to specify.
                                  items:
                                    description: Image contains an image name, a new
                                      name, a new tag or digest, which will replace
                                      the original name and tag.
                                    properties:
                                      digest:
                                        description: Digest is the value used to replace
                                          the original image tag. If digest is present
                                          NewTag value is ignored.
                                        type: string
                                      name:
                                        description: Name is a tag-less image name.
                                        type: string
                                      newName:
                                        description: NewName is the value used to
                                          replace the original name.
                                        type: string
                                      newTag:
                                        description: NewTag is the value used to replace
                                          the original tag.
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  type: array
                                interval:
                                  description: The interval at which to reconcile
                                    the Kustomization.
                                  type: string
                                patches:
                                  description: Strategic merge and JSON patches, defined
                                    as inline YAML objects, capable of targeting objects
                                    based on kind, label and annotation selectors.
                                  items:
                                    description: Patch contains an inline StrategicMerge
                                      or JSON6902 patch, and the target the patch
                                      should be applied to.
                                    properties:
                                      patch:
                                        description: Patch contains an inline StrategicMerge
                                          patch or an inline JSON6902 patch with an
                                          array of operation objects.
                                        type: string
                                      target:
                                        description: Target points to the resources
                                          that the patch document should be applied
                                          to.
                                        properties:
                                          annotationSelector:
                                            description: AnnotationSelector is a string
                                              that follows the label selection expression
                                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                              It matches with the resource annotations.
                                            type: string
                                          group:
                                            description: Group is the API group to
                                              select resources from. Together with
                                              Version and Kind it is capable of unambiguously
                                              identifying and/or selecting resources.
                                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                            type: string
                                          kind:
                                            description: Kind of the API Group to
                                              select resources from. Together with
                                              Group and Version it is capable of unambiguously
                                              identifying and/or selecting resources.
                                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                            type: string
                                          labelSelector:
                                            description: LabelSelector is a string
                                              that follows the label selection expression
                                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                              It matches with the resource labels.
                                            type: string
                                          name:
                                            description: Name to match resources with.
                                            type: string
                                          namespace:
                                            description: Namespace to select resources
                                              from.
                                            type: string
                                          version:
                                            description: Version of the API Group
                                              to select resources from. Together with
                                              Group and Kind it is capable of unambiguously
                                              identifying and/or selecting resources.
                                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                            type: string
                                        type: object
                                    type: object
                                  type: array
                                path:
                                  description: Path to the directory containing the
                                    kustomization.yaml file, or the set of plain YAMLs
                                    a kustomization.yaml should be generated for.
                                    Defaults to 'None', which translates to the root
                                    path of the SourceRef.
                                  type: string
                                postBuild:
                                  description: PostBuild describes which actions to
                                    perform on the YAML manifest generated by building
                                    the kustomize overlay.
                                  properties:
                                    substitute:
                                      additionalProperties:
                                        type: string
                                      description: Substitute holds a map of key/value
                                        pairs. The variables defined in your YAML
                                        manifests that match any of the keys defined
                                        in the map will be substituted with the set
                                        value. Includes support for bash string replacement
                                        functions e.g. ${var:=default}, ${var:position}
                                        and ${var/substring/replacement}.
                                      type: object
                                    substituteFrom:
                                      description: SubstituteFrom holds references
                                        to ConfigMaps and Secrets containing the variables
                                        and their values to be substituted in the
                                        YAML manifests. The ConfigMap and the Secret
                                        data keys represent the var names and they
                                        must match the vars declared in the manifests
                                        for the substitution to happen.
                                      items:
                                        description: SubstituteReference contains
                                          a reference to a resource containing the
                                          variables name and value.
                                        properties:
                                          kind:
                                            description: Kind of the values referent,
                                              valid values are ('Secret', 'ConfigMap').
                                            enum:
                                            - Secret
                                            - ConfigMap
                                            type: string
                                          name:
                                            description: Name of the values referent.
                                              Should reside in the same namespace
                                              as the referring resource.
                                            maxLength: 253
                                            minLength: 1
                                            type: string
                                          optional:
                                            default: false
                                            description: Optional indicates whether
                                              the referenced resource must exist,
                                              or whether to tolerate its absence.
                                              If true and the referenced resource
                                              is absent, proceed as if the resource
                                              was present but empty, without any variables
                                              defined.
                                            type: boolean
                                        required:
                                        - kind
                                        - name
                                        type: object
                                      type: array
                                  type: object
                                prune:
                                  description: Prune enables garbage collection.
                                  type: boolean
                                retryInterval:
                                  description: The interval at which to retry a previously
                                    failed reconciliation. When not specified, the
                                    controller uses the KustomizationSpec.Interval
                                    value to retry failures.
                                  type: string
                                serviceAccountName:
                                  description: The name of the Kubernetes service
                                    account to impersonate when reconciling this Kustomization.
                                  type: string
                                suspend:
                                  description: This flag tells the controller to suspend
                                    subsequent kustomize executions, it does not apply
                                    to already started executions. Defaults to false.
                                  type: boolean
                                timeout:
                                  description: Timeout for validation, apply and health
                                    checking operations. Defaults to 'Interval' duration.
                                  type: string
                                wait:
                                  description: Wait instructs the controller to check
                                    the health of all the reconciled resources. When
                                    enabled, the HealthChecks are ignored. Defaults
                                    to false.
                                  type: boolean
                              required:
                              - destination
                              - interval
                              - prune
                              type: object
                            type: array
                        type: object
                      source:
                        description: Source represents the ground truth of the FluxCD
                          Application
                        properties:
                          sourceRef:
                            description: SourceRef is the reference to the Source
                            properties:
                              apiVersion:
                                description: APIVersion of the referent.
                                type: string
                              kind:
                                description: Kind of the referent.
                                enum:
                                - HelmRepository
                                - GitRepository
                                - Bucket
                                type: string
                              name:
                                description: Name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                              namespace:
                                description: Namespace of the referent.
                                maxLength: 63
                                minLength: 1
                                type: string
                            required:
                            - name
                            type: object
                        required:
                        - sourceRef
                        type: object
                    required:
                    - config
                    type: object
                type: object
              kind:
                description: Engine is the backend GitOps Solutions type
                type: string
            type: object
          status:
            description: ApplicationStatus represents the status of the Application
            properties:
              argoApp:
                type: string
              fluxApp:
                description: FluxApplicationStatus represent the status of a FluxApp
                properties:
                  helmReleaseStatus:
                    additionalProperties:
                      description: HelmReleaseStatus defines the observed state of
                        a HelmRelease.
                      properties:
                        conditions:
                          description: Conditions holds the conditions for the HelmRelease.
                          items:
                            description: "Condition contains details for one aspect
                              of the current state of this API Resource. --- This
                              struct is intended for direct use as an array at the
                              field path .status.conditions.  For example, type FooStatus
                              struct{     // Represents the observations of a foo's
                              current state.     // Known .status.conditions.type
                              are: \"Available\", \"Progressing\", and \"Degraded\"
                              \    // +patchMergeKey=type     // +patchStrategy=merge
                              \    // +listType=map     // +listMapKey=type     Conditions
                              []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                              patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                              \n     // other fields }"
                            properties:
                              lastTransitionTime:
                                description: lastTransitionTime is the last time the
                                  condition transitioned from one status to another.
                                  This should be when the underlying condition changed.  If
                                  that is not known, then using the time when the
                                  API field changed is acceptable.
                                format: date-time
                                type: string
                              message:
                                description: message is a human readable message indicating
                                  details about the transition. This may be an empty
                                  string.
                                maxLength: 32768
                                type: string
                              observedGeneration:
                                description: observedGeneration represents the .metadata.generation
                                  that the condition was set based upon. For instance,
                                  if .metadata.generation is currently 12, but the
                                  .status.conditions[x].observedGeneration is 9, the
                                  condition is out of date with respect to the current
                                  state of the instance.
                                format: int64
                                minimum: 0
                                type: integer
                              reason:
                                description: reason contains a programmatic identifier
                                  indicating the reason for the condition's last transition.
                                  Producers of specific condition types may define
                                  expected values and meanings for this field, and
                                  whether the values are considered a guaranteed API.
                                  The value should be a CamelCase string. This field
                                  may not be empty.
                                maxLength: 1024
                                minLength: 1
                                pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                type: string
                              status:
                                description: status of the condition, one of True,
                                  False, Unknown.
                                enum:
                                - "True"
                                - "False"
                                - Unknown
                                type: string
                              type:
                                description: type of condition in CamelCase or in
                                  foo.example.com/CamelCase. --- Many .condition.type
                                  values are consistent across resources like Available,
                                  but because arbitrary conditions can be useful (see
                                  .node.status.conditions), the ability to deconflict
                                  is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                                maxLength: 316
                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                type: string
                            required:
                            - lastTransitionTime
                            - message
                            - reason
                            - status
                            - type
                            type: object
                          type: array
                        failures:
                          description: Failures is the reconciliation failure count
                            against the latest desired state. It is reset after a
                            successful reconciliation.
                          format: int64
                          type: integer
                        helmChart:
                          description: HelmChart is the namespaced name of the HelmChart
                            resource created by the controller for the HelmRelease.
                          type: string
                        installFailures:
                          description: InstallFailures is the install failure count
                            against the latest desired state. It is reset after a
                            successful reconciliation.
                          format: int64
                          type: integer
                        lastAppliedRevision:
                          description: LastAppliedRevision is the revision of the
                            last successfully applied source.
                          type: string
                        lastAttemptedRevision:
                          description: LastAttemptedRevision is the revision of the
                            last reconciliation attempt.
                          type: string
                        lastAttemptedValuesChecksum:
                          description: LastAttemptedValuesChecksum is the SHA1 checksum
                            of the values of the last reconciliation attempt.
                          type: string
                        lastHandledReconcileAt:
                          description: LastHandledReconcileAt holds the value of the
                            most recent reconcile request value, so a change of the
                            annotation value can be detected.
                          type: string
                        lastReleaseRevision:
                          description: LastReleaseRevision is the revision of the
                            last successful Helm release.
                          type: integer
                        observedGeneration:
                          description: ObservedGeneration is the last observed generation.
                          format: int64
                          type: integer
                        upgradeFailures:
                          description: UpgradeFailures is the upgrade failure count
                            against the latest desired state. It is reset after a
                            successful reconciliation.
                          format: int64
                          type: integer
                      type: object
                    description: HelmReleaseStatus represent the status of each HelmRelease
                      the key is the HelmRelease's name and the value is the HelmRelease's
                      status
                    type: object
                  kustomizationStatus:
                    additionalProperties:
                      description: KustomizationStatus defines the observed state
                        of a kustomization.
                      properties:
                        conditions:
                          items:
                            description: "Condition contains details for one aspect
                              of the current state of this API Resource. --- This
                              struct is intended for direct use as an array at the
                              field path .status.conditions.  For example, type FooStatus
                              struct{     // Represents the observations of a foo's
                              current state.     // Known .status.conditions.type
                              are: \"Available\", \"Progressing\", and \"Degraded\"
                              \    // +patchMergeKey=type     // +patchStrategy=merge
                              \    // +listType=map     // +listMapKey=type     Conditions
                              []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                              patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                              \n     // other fields }"
                            properties:
                              lastTransitionTime:
                                description: lastTransitionTime is the last time the
                                  condition transitioned from one status to another.
                                  This should be when the underlying condition changed.  If
                                  that is not known, then using the time when the
                                  API field changed is acceptable.
                                format: date-time
                                type: string
                              message:
                                description: message is a human readable message indicating
                                  details about the transition. This may be an empty
                                  string.
                                maxLength: 32768
                                type: string
                              observedGeneration:
                                description: observedGeneration represents the .metadata.generation
                                  that the condition was set based upon. For instance,
                                  if .metadata.generation is currently 12, but the
                                  .status.conditions[x].observedGeneration is 9, the
                                  condition is out of date with respect to the current
                                  state of the instance.
                                format: int64
                                minimum: 0
                                type: integer
                              reason:
                                description: reason contains a programmatic identifier
                                  indicating the reason for the condition's last transition.
                                  Producers of specific condition types may define
                                  expected values and meanings for this field, and
                                  whether the values are considered a guaranteed API.
                                  The value should be a CamelCase string. This field
                                  may not be empty.
                                maxLength: 1024
                                minLength: 1
                                pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                type: string
                              status:
                                description: status of the condition, one of True,
                                  False, Unknown.
                                enum:
                                - "True"
                                - "False"
                                - Unknown
                                type: string
                              type:
                                description: type of condition in CamelCase or in
                                  foo.example.com/CamelCase. --- Many .condition.type
                                  values are consistent across resources like Available,
                                  but because arbitrary conditions can be useful (see
                                  .node.status.conditions), the ability to deconflict
                                  is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                                maxLength: 316
                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                type: string
                            required:
                            - lastTransitionTime
                            - message
                            - reason
                            - status
                            - type
                            type: object
                          type: array
                        inventory:
                          description: Inventory contains the list of Kubernetes resource
                            object references that have been successfully applied.
                          properties:
                            entries:
                              description: Entries of Kubernetes resource object references.
                              items:
                                description: ResourceRef contains the information
                                  necessary to locate a resource within a cluster.
                                properties:
                                  id:
                                    description: ID is the string representation of
                                      the Kubernetes resource object's metadata, in
                                      the format '<namespace>_<name>_<group>_<kind>'.
                                    type: string
                                  v:
                                    description: Version is the API version of the
                                      Kubernetes resource object's kind.
                                    type: string
                                required:
                                - id
                                - v
                                type: object
                              type: array
                          required:
                          - entries
                          type: object
                        lastAppliedRevision:
                          description: The last successfully applied revision. The
                            revision format for Git sources is <branch|tag>/<commit-sha>.
                          type: string
                        lastAttemptedRevision:
                          description: LastAttemptedRevision is the revision of the
                            last reconciliation attempt.
                          type: string
                        lastHandledReconcileAt:
                          description: LastHandledReconcileAt holds the value of the
                            most recent reconcile request value, so a change of the
                            annotation value can be detected.
                          type: string
                        observedGeneration:
                          description: ObservedGeneration is the last reconciled generation.
                          format: int64
                          type: integer
                      type: object
                    description: KustomizationStatus represent the status of each
                      Kustomization the key is the Kustomization's name and the value
                      is the Kustomization's status
                    type: object
                type: object
              kind:
                description: Engine is the backend GitOps Solutions type
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
